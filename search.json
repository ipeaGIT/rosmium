[{"path":"https://ipeagit.github.io/rosmium/articles/rosmium.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Introduction to rosmium: R bindings for Osmium Tool","text":"using rosmium please make sure installed computer. can download either stable version CRAN… …development version GitHub. Please note rosmium requires Osmium installed added PATH environment variable local system. instructions install Osmium, please check official website.","code":"install.packages(\"rosmium\") # install.packages(\"remotes\") remotes::install_github(\"ipeaGIT/rosmium\")"},{"path":"https://ipeagit.github.io/rosmium/articles/rosmium.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"Introduction to rosmium: R bindings for Osmium Tool","text":"package currently includes three entrypoints Osmium’s API. demonstrate , use sample data bundled package.","code":"library(rosmium) library(ggplot2)  cur_pbf <- system.file(\"extdata/cur.osm.pbf\", package = \"rosmium\")  cur_pbf_lines <- sf::st_read(cur_pbf, layer = \"lines\", quiet = TRUE)  ggplot(cur_pbf_lines) + geom_sf()"},{"path":"https://ipeagit.github.io/rosmium/articles/rosmium.html","id":"extract","dir":"Articles","previous_headings":"Usage","what":"extract()","title":"Introduction to rosmium: R bindings for Osmium Tool","text":"extract() creates geographical extracts OSM files. basic form, function takes path OSM file whose geographical extent extracted , extent, either bounding box (multi)polygon, path file output written . Additionally, function can also take strategy used creating extract, defaults \"complete_ways\". Please check function documentation details available strategies behavior.","code":"# buffering the pbf bounding box 4000 meters inward and using the result # extent to extract the osm data inside it. transforming the crs because # inward buffers only work with projected crs  bbox <- sf::st_bbox(cur_pbf_lines) bbox_polygon <- sf::st_as_sf(sf::st_as_sfc(bbox)) smaller_bbox_poly <- sf::st_buffer(sf::st_transform(bbox_polygon, 5880), -4000) smaller_bbox_poly <- sf::st_transform(smaller_bbox_poly, 4326)  output_path <- extract(   cur_pbf,   smaller_bbox_poly,   tempfile(fileext = \".osm.pbf\"),   spinner = FALSE )  extracted_pbf_lines <- sf::st_read(output_path, layer = \"lines\", quiet = TRUE)  ggplot() +   geom_sf(data = extracted_pbf_lines) +   geom_sf(data = smaller_bbox_poly, color = \"red\", fill = NA)"},{"path":"https://ipeagit.github.io/rosmium/articles/rosmium.html","id":"tags_filter","dir":"Articles","previous_headings":"Usage","what":"tags_filter()","title":"Introduction to rosmium: R bindings for Osmium Tool","text":"tags_filter() filters OSM files, keeping objects matching least one specified expressions input. basic form, function takes path OSM file filters applied, filter expressions applied path file output written . Please check function documentation description filter expression format. default, objects matching expressions kept output, also objects referenced . behavior can changed omit_referenced parameter. function also includes invert_match parameter, inverts sense matching (excluding objects match filters), remove_tags parameter, used remove tags objects referenced objects matching filters, match filter . arguments default FALSE.","code":"# get all amenity nodes output <- tags_filter(cur_pbf, \"n/amenity\", tempfile(fileext = \".osm.pbf\")) nodes <- sf::st_read(output, layer = \"points\", quiet = TRUE) head(nodes$other_tags)  # get all objects (nodes, ways or relations) with an addr:* tag output <- tags_filter(   cur_pbf,   \"addr:*\",   tempfile(fileext = \".osm.pbf\"),   omit_referenced = TRUE,   spinner = FALSE ) nodes <- sf::st_read(output, layer = \"points\", quiet = TRUE) head(nodes$other_tags)"},{"path":"https://ipeagit.github.io/rosmium/articles/rosmium.html","id":"show_content","dir":"Articles","previous_headings":"Usage","what":"show_content()","title":"Introduction to rosmium: R bindings for Osmium Tool","text":"Finally, show_content() displays content OSM file either .html, .xml .opl format. function takes input path OSM file whose content shown, output format content displayed (defaulting .html, human readable format, although also slowest open inspect, depending size input file) type objects included output (defaulting existing objects input). function returns path temporary file OSM file content saved opens content web browser appropriate application, depending output format.","code":"# displays the content of the previous tags_filter() output in html format show_content(output, spinner = FALSE)"},{"path":"https://ipeagit.github.io/rosmium/articles/rosmium.html","id":"acknowledgement","dir":"Articles","previous_headings":"Usage","what":"Acknowledgement","title":"Introduction to rosmium: R bindings for Osmium Tool","text":"rosmium developed team Institute Applied Economic Research (Ipea), Brazil. like thank authors contributors Osmium development Osmium Tool.","code":""},{"path":"https://ipeagit.github.io/rosmium/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel Herszenhut. Author, maintainer.","code":""},{"path":"https://ipeagit.github.io/rosmium/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Herszenhut D (2025). rosmium: Bindings 'Osmium Tool'. R package version 0.1.0, https://github.com/ipeaGIT/rosmium, https://ipeagit.github.io/rosmium/.","code":"@Manual{,   title = {rosmium: Bindings for 'Osmium Tool'},   author = {Daniel Herszenhut},   year = {2025},   note = {R package version 0.1.0,     https://github.com/ipeaGIT/rosmium},   url = {https://ipeagit.github.io/rosmium/}, }"},{"path":"https://ipeagit.github.io/rosmium/index.html","id":"rosmium","dir":"","previous_headings":"","what":"Bindings for Osmium Tool","title":"Bindings for Osmium Tool","text":"rosmium allows one use Osmium Tool R. Osmium multipurpose command line tool enables one manipulate analyze OpenStreetMap (OSM) files several different commands. Currently, package aim offer functions cover entirety Osmium’s API, instead making available functions wrap limited set Osmium’s features.","code":""},{"path":"https://ipeagit.github.io/rosmium/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Bindings for Osmium Tool","text":"Development version: Please note rosmium requires Osmium installed added PATH environment variable local system. instructions install Osmium, please check official website.","code":"# install.packages(\"remotes\") remotes::install_github(\"ipeaGIT/rosmium\")"},{"path":"https://ipeagit.github.io/rosmium/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Bindings for Osmium Tool","text":"package currently includes three entrypoints Osmium’s API. demonstrate , use sample data bundled package.","code":"library(rosmium) library(ggplot2)  cur_pbf <- system.file(\"extdata/cur.osm.pbf\", package = \"rosmium\")  cur_pbf_lines <- sf::st_read(cur_pbf, layer = \"lines\", quiet = TRUE)  ggplot(cur_pbf_lines) + geom_sf()"},{"path":"https://ipeagit.github.io/rosmium/index.html","id":"extract","dir":"","previous_headings":"Usage","what":"extract()","title":"Bindings for Osmium Tool","text":"extract() creates geographical extracts OSM files. basic form, function takes path OSM file whose geographical extent extracted , extent, either bounding box (multi)polygon, path file output written . Additionally, function can also take strategy used creating extract, defaults \"complete_ways\". Please check function documentation details available strategies behavior.","code":"# buffering the pbf bounding box 4000 meters inward and using the result # extent to extract the osm data inside it. transforming the crs because # inward buffers only work with projected crs  bbox <- sf::st_bbox(cur_pbf_lines) bbox_polygon <- sf::st_as_sf(sf::st_as_sfc(bbox)) smaller_bbox_poly <- sf::st_buffer(sf::st_transform(bbox_polygon, 5880), -4000) smaller_bbox_poly <- sf::st_transform(smaller_bbox_poly, 4326)  output_path <- extract(   cur_pbf,   smaller_bbox_poly,   tempfile(fileext = \".osm.pbf\"),   spinner = FALSE )  extracted_pbf_lines <- sf::st_read(output_path, layer = \"lines\", quiet = TRUE)  ggplot() +   geom_sf(data = extracted_pbf_lines) +   geom_sf(data = smaller_bbox_poly, color = \"red\", fill = NA)"},{"path":"https://ipeagit.github.io/rosmium/index.html","id":"tags_filter","dir":"","previous_headings":"Usage","what":"tags_filter()","title":"Bindings for Osmium Tool","text":"tags_filter() filters OSM files, keeping objects matching least one specified expressions input. basic form, function takes path OSM file filters applied, filter expressions applied path file output written . Please check function documentation description filter expression format. default, objects matching expressions kept output, also objects referenced . behavior can changed omit_referenced parameter. function also includes invert_match parameter, inverts sense matching (excluding objects match filters), remove_tags parameter, used remove tags objects referenced objects matching filters, match filter . arguments default FALSE.","code":"# get all amenity nodes output <- tags_filter(cur_pbf, \"n/amenity\", tempfile(fileext = \".osm.pbf\")) #> -  nodes <- sf::st_read(output, layer = \"points\", quiet = TRUE) head(nodes$other_tags) #> [1] \"\\\"amenity\\\"=>\\\"university\\\",\\\"wikidata\\\"=>\\\"Q10278991\\\"\"                                                                   #> [2] \"\\\"amenity\\\"=>\\\"telephone\\\",\\\"operator\\\"=>\\\"OI\\\",\\\"payment:telephone_cards\\\"=>\\\"yes\\\"\"                                      #> [3] \"\\\"amenity\\\"=>\\\"kindergarten\\\"\"                                                                                             #> [4] \"\\\"addr:housenumber\\\"=>\\\"45\\\",\\\"addr:street\\\"=>\\\"Rua Amintas de Barros\\\",\\\"amenity\\\"=>\\\"restaurant\\\",\\\"cuisine\\\"=>\\\"arab\\\"\" #> [5] \"\\\"addr:city\\\"=>\\\"Curitiba\\\",\\\"addr:housenumber\\\"=>\\\"1250\\\",\\\"addr:street\\\"=>\\\"Rua 7 de Abril\\\",\\\"amenity\\\"=>\\\"pub\\\"\"       #> [6] \"\\\"amenity\\\"=>\\\"taxi\\\"\"  # get all objects (nodes, ways or relations) with an addr:* tag output <- tags_filter(   cur_pbf,   \"addr:*\",   tempfile(fileext = \".osm.pbf\"),   omit_referenced = TRUE,   spinner = FALSE ) nodes <- sf::st_read(output, layer = \"points\", quiet = TRUE) head(nodes$other_tags) #> [1] \"\\\"addr:city\\\"=>\\\"Curitiba\\\",\\\"addr:housenumber\\\"=>\\\"358\\\",\\\"addr:postcode\\\"=>\\\"80510-190\\\",\\\"addr:street\\\"=>\\\"Rua Mateus Leme\\\",\\\"addr:suburb\\\"=>\\\"Centro Cívico\\\",\\\"brand\\\"=>\\\"Ibis\\\",\\\"brand:wikidata\\\"=>\\\"Q920166\\\",\\\"brand:wikipedia\\\"=>\\\"en:Ibis (hotel)\\\",\\\"tourism\\\"=>\\\"hotel\\\"\" #> [2] \"\\\"addr:city\\\"=>\\\"Curitiba\\\",\\\"addr:country\\\"=>\\\"BR\\\",\\\"addr:housenumber\\\"=>\\\"1975\\\",\\\"addr:street\\\"=>\\\"Avenida Marechal Deodoro\\\"\"                                                                                                                                                      #> [3] \"\\\"addr:city\\\"=>\\\"Curitiba\\\",\\\"addr:country\\\"=>\\\"BR\\\",\\\"addr:housenumber\\\"=>\\\"2085\\\",\\\"addr:street\\\"=>\\\"Avenida Marechal Deodoro\\\"\"                                                                                                                                                      #> [4] \"\\\"addr:city\\\"=>\\\"Curitiba\\\",\\\"addr:country\\\"=>\\\"BR\\\",\\\"addr:housenumber\\\"=>\\\"1976\\\",\\\"addr:street\\\"=>\\\"Avenida Marechal Deodoro\\\"\"                                                                                                                                                      #> [5] \"\\\"addr:city\\\"=>\\\"Curitiba\\\",\\\"addr:country\\\"=>\\\"BR\\\",\\\"addr:housenumber\\\"=>\\\"2086\\\",\\\"addr:street\\\"=>\\\"Avenida Marechal Deodoro\\\"\"                                                                                                                                                      #> [6] \"\\\"addr:city\\\"=>\\\"Curitiba\\\",\\\"addr:country\\\"=>\\\"BR\\\",\\\"addr:housenumber\\\"=>\\\"965\\\",\\\"addr:street\\\"=>\\\"Rua José de Alencar\\\"\""},{"path":"https://ipeagit.github.io/rosmium/index.html","id":"show_content","dir":"","previous_headings":"Usage","what":"show_content()","title":"Bindings for Osmium Tool","text":"Finally, show_content() displays content OSM file either .html, .xml .opl format. function takes input path OSM file whose content shown, output format content displayed (defaulting .html, human readable format, although also slowest open inspect, depending size input file) type objects included output (defaulting existing objects input). function returns path temporary file OSM file content saved opens content web browser appropriate application, depending output format.","code":"# displays the content of the previous tags_filter() output in html format show_content(output, spinner = FALSE) #> [1] \"/tmp/RtmpcvrR7F/osm_content72fa2e992ee.html\""},{"path":"https://ipeagit.github.io/rosmium/index.html","id":"acknowledgement","dir":"","previous_headings":"","what":"Acknowledgement","title":"Bindings for Osmium Tool","text":"rosmium developed team Institute Applied Economic Research (Ipea), Brazil. like thank authors contributors Osmium development Osmium Tool.","code":""},{"path":"https://ipeagit.github.io/rosmium/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Ipea Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ipeagit.github.io/rosmium/reference/assert_osmium_is_installed.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert Osmium is installed — assert_osmium_is_installed","title":"Assert Osmium is installed — assert_osmium_is_installed","text":"Asserts Osmium installed, throwing error otherwise.","code":""},{"path":"https://ipeagit.github.io/rosmium/reference/assert_osmium_is_installed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert Osmium is installed — assert_osmium_is_installed","text":"","code":"assert_osmium_is_installed()"},{"path":"https://ipeagit.github.io/rosmium/reference/assert_osmium_is_installed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assert Osmium is installed — assert_osmium_is_installed","text":"Throws error Osmium installed, invisibly returns TRUE otherwise.","code":""},{"path":"https://ipeagit.github.io/rosmium/reference/extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Create geographical extracts from an OSM file — extract","title":"Create geographical extracts from an OSM file — extract","text":"Creates geographical extracts OSM data file OSM history file. geographical extent can given either bounding box (multi)polygon.","code":""},{"path":"https://ipeagit.github.io/rosmium/reference/extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create geographical extracts from an OSM file — extract","text":"","code":"extract(   input_path,   extent,   output_path,   strategy = c(\"complete_ways\", \"smart\", \"simple\"),   overwrite = FALSE,   echo_cmd = FALSE,   echo = TRUE,   spinner = TRUE,   verbose = FALSE )"},{"path":"https://ipeagit.github.io/rosmium/reference/extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create geographical extracts from an OSM file — extract","text":"input_path string. path OSM data/history file whose extent extracted . Please see file_formats list supported file formats. extent Either POLYGON MULTIPOLYGON sf object one feature bbox object, created sf::st_bbox. output_path string. path file output written . Please see file_formats list supported file formats. strategy string. strategy use creating extract. Available strategies \"complete_ways\", \"smart\" \"simple\". Defaults \"complete_ways\". Please see \"Strategies\" section description one . overwrite logical. Whether existing files overwritten output. Defaults FALSE. echo_cmd logical. Whether print Osmium command generated function call screen. Defaults FALSE. echo logical. Whether print standard output error generated Osmium call screen. Defaults TRUE. spinner logical. Whether show reassuring spinner Osmium call executed. Defaults TRUE. verbose logical. Whether display detailed information running command. Defaults FALSE.","code":""},{"path":"https://ipeagit.github.io/rosmium/reference/extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create geographical extracts from an OSM file — extract","text":"normalized path output file.","code":""},{"path":"https://ipeagit.github.io/rosmium/reference/extract.html","id":"strategies","dir":"Reference","previous_headings":"","what":"Strategies","title":"Create geographical extracts from an OSM file — extract","text":"Different strategies can used creating extracts. Depending strategy, different objects end extracts. strategies differ much memory need often need read input file. choice strategy depends want use generated extracts much memory time . \"simple\" - runs single pass. extract contain nodes inside region ways referencing nodes, well relations referencing nodes ways already included. Ways crossing region boundary reference-complete. Relations reference-complete. strategy fast, reads input , result enough use cases. strategy work history files. \"complete_ways\" - runs two passes. extract contain nodes inside region ways referencing nodes, well nodes referenced ways. extract also contain relations referenced nodes inside region ways already included , recursively, parent relations. ways reference-complete, relations . \"smart\" - runs three passes. extract contain nodes inside region ways referencing nodes, well nodes referenced ways. extract also contain relations referenced nodes inside region ways already included , recursively, parent relations. extract also contain nodes ways (nodes reference) referenced relations tagged \"type=multipolygon\" directly referencing nodes region ways referencing nodes region. ways reference-complete, multipolygon relations referencing nodes regions ways nodes region reference-complete. relations reference-complete.","code":""},{"path":"https://ipeagit.github.io/rosmium/reference/extract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create geographical extracts from an OSM file — extract","text":"","code":"if (FALSE) { # identical(tolower(Sys.getenv(\"NOT_CRAN\")), \"true\") pbf_path <- system.file(\"extdata/cur.osm.pbf\", package = \"rosmium\")  file.size(pbf_path)  # buffering the pbf bounding box 4000 meters inward and using the result # extent to extract the osm data inside it. transforming the crs because # inward buffers only work with projected crs  lines <- sf::st_read(pbf_path, layer = \"lines\", quiet = TRUE) bbox <- sf::st_bbox(lines) bbox_polygon <- sf::st_as_sf(sf::st_as_sfc(bbox)) smaller_bbox_poly <- sf::st_buffer(   sf::st_transform(bbox_polygon, 5880),   -4000 ) smaller_bbox_poly <- sf::st_transform(smaller_bbox_poly, 4326)  output_path <- extract(   pbf_path,   smaller_bbox_poly,   tempfile(fileext = \".osm.pbf\") )  file.size(output_path) }"},{"path":"https://ipeagit.github.io/rosmium/reference/file_formats.html","id":null,"dir":"Reference","previous_headings":"","what":"Supported file formats — file_formats","title":"Supported file formats — file_formats","text":"Please note documentation adapted Osmium documentation. Please see https://docs.osmcode.org/osmium/latest/osmium-file-formats.html original documentation.","code":""},{"path":"https://ipeagit.github.io/rosmium/reference/file_formats.html","id":"file-types","dir":"Reference","previous_headings":"","what":"File types","title":"Supported file formats — file_formats","text":"OSM uses three types files main data: Data files: common files. contain OSM data specific point time. one version every object (node, way relation) contained file. Deleted objects file. usual suffix used .osm. History files: files contain current version object, history . object (node, way relation) can zero versions file. Deleted objects can also file. usual suffix used .osm .osh. sometimes suffix used normal data files (.osm) clear indicator header, always clear type file front . Change files: sometimes called diff files replication diffs, files contain changes one state OSM database another state. Change files can contains several versions object also deleted objects. usual suffix used .osc. files common contain OSM objects (nodes, ways relations). History files change files can contain several versions object also deleted objects; data files . possible, Osmium commands can handle file types. commands file types make sense.","code":""},{"path":"https://ipeagit.github.io/rosmium/reference/file_formats.html","id":"formats","dir":"Reference","previous_headings":"","what":"Formats","title":"Supported file formats — file_formats","text":"Osmium supports major OSM file formats plus . : classical XML format variants .osm (data files), .osh (data files history) .osc (change files). PBF binary format (usually suffix .osm.pbf just .pbf). OPL format (usually suffix .osm.opl just .opl). O5M/O5C format (usually suffix .o5m .o5c) (reading ). \"debug\" format (usually suffix .osm.debug) (writing ). addition, files formats except PBF can compressed using gzip bzip2 (add .gz .bz2 suffixes, respectively - e.g. data.osm.bz2).","code":""},{"path":"https://ipeagit.github.io/rosmium/reference/rosmium.html","id":null,"dir":"Reference","previous_headings":"","what":"rosmium: Bindings for Osmium Tool — rosmium","title":"rosmium: Bindings for Osmium Tool — rosmium","text":"Allows one use Osmium Tool R. Osmium multipurpose command line tool enables one manipulate analyze OpenStreetMap (OSM) files several different commands. Currently, package aim offer functions cover entirety Osmium’s API, instead making available functions wrap limited set Osmium’s features.","code":""},{"path":"https://ipeagit.github.io/rosmium/reference/rosmium.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rosmium: Bindings for Osmium Tool — rosmium","text":"Please check vignette package usage: Introductino rosmium: R bindings Osmium Tool. Run vignette(\"rosmium\") check website.","code":""},{"path":[]},{"path":"https://ipeagit.github.io/rosmium/reference/rosmium.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"rosmium: Bindings for Osmium Tool — rosmium","text":"Maintainer: Daniel Herszenhut dhersz@gmail.com (ORCID)","code":""},{"path":"https://ipeagit.github.io/rosmium/reference/show_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Show the content of an OSM file — show_content","title":"Show the content of an OSM file — show_content","text":"Displays content OSM file either .html, .xml .opl format.","code":""},{"path":"https://ipeagit.github.io/rosmium/reference/show_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show the content of an OSM file — show_content","text":"","code":"show_content(   input_path,   output_format = c(\"html\", \"opl\", \"xml\"),   object_type = c(\"all\", \"node\", \"way\", \"relation\", \"changeset\"),   echo_cmd = FALSE,   spinner = TRUE,   preview = TRUE )"},{"path":"https://ipeagit.github.io/rosmium/reference/show_content.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show the content of an OSM file — show_content","text":"input_path string. path OSM file whose content shown. Please see file_formats list supported file formats. output_format string. format content shown. Either \"html\", \"opl\" \"xml\". Please note \"html\" option, although human readable format, results large files may slow open inspect, depending size input file. object_type character vector. object types included output. Please note using \"\" simple way passing available types (\"node\", \"way\", \"relation\" \"changeset\"). echo_cmd logical. Whether print Osmium command generated function call screen. Defaults FALSE. spinner logical. Whether show reassuring spinner Osmium call executed. Defaults TRUE. preview logical. Whether open temporary file content OSM file saved.","code":""},{"path":"https://ipeagit.github.io/rosmium/reference/show_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show the content of an OSM file — show_content","text":"path temporary file OSM file content saved.","code":""},{"path":"https://ipeagit.github.io/rosmium/reference/show_content.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show the content of an OSM file — show_content","text":"","code":"if (FALSE) { # identical(tolower(Sys.getenv(\"NOT_CRAN\")), \"true\") pbf_path <- system.file(\"extdata/cur.osm.pbf\", package = \"rosmium\")  small_pbf <- tags_filter(   pbf_path,   \"note\",   tempfile(fileext = \"osm.pbf\"),   omit_referenced = TRUE )  # both function calls below result in outputs with the same object types  show_content(small_pbf, object_type = \"all\") show_content(   small_pbf,   object_type = c(\"node\", \"way\", \"relation\", \"changeset\") )  # only show nodes and ways  show_content(small_pbf, object_type = c(\"node\", \"way\"))  # display all objects in xml format  show_content(small_pbf, output_format = \"xml\") }"},{"path":"https://ipeagit.github.io/rosmium/reference/tags_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter objects matching specified keys/tags — tags_filter","title":"Filter objects matching specified keys/tags — tags_filter","text":"Get objects matching least one specified expressions input write output. objects matching expressions kept output, objects referenced also added output (unless omit_referenced = TRUE). Objects written order found input. Please note function work correctly history files omit_referenced TRUE, used change files.","code":""},{"path":"https://ipeagit.github.io/rosmium/reference/tags_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter objects matching specified keys/tags — tags_filter","text":"","code":"tags_filter(   input_path,   filters,   output_path,   invert_match = FALSE,   omit_referenced = FALSE,   remove_tags = FALSE,   overwrite = FALSE,   echo_cmd = FALSE,   echo = TRUE,   spinner = TRUE,   verbose = FALSE,   progress = FALSE )"},{"path":"https://ipeagit.github.io/rosmium/reference/tags_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter objects matching specified keys/tags — tags_filter","text":"input_path string. path OSM data/history file filters applied. Please see file_formats list supported file formats. filters string. filter expressions applied input file. Please see \"Filter expressions\" section description filter expression format. output_path string. path file output written . Please see file_formats list supported file formats. invert_match logical. Whether invert sense matching - .e. exclude objects matching tags. Defaults FALSE. omit_referenced logical. Whether omit nodes referenced matching ways members referenced matching relations. Defaults FALSE. remove_tags logical. Whether remove tags objects matching filter expression included complete references (nodes ways members relations). Defaults FALSE. Please note object matching filter used reference keep tags. overwrite logical. Whether existing files overwritten output. Defaults FALSE. echo_cmd logical. Whether print Osmium command generated function call screen. Defaults FALSE. echo logical. Whether print standard output error generated Osmium call screen. Defaults TRUE. spinner logical. Whether show reassuring spinner Osmium call executed. Defaults TRUE. verbose logical. Whether display detailed information running command. Defaults FALSE. progress logical. Whether display progress bar running command. Defaults FALSE.","code":""},{"path":"https://ipeagit.github.io/rosmium/reference/tags_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter objects matching specified keys/tags — tags_filter","text":"normalized path output file.","code":""},{"path":"https://ipeagit.github.io/rosmium/reference/tags_filter.html","id":"filter-expressions","dir":"Reference","previous_headings":"","what":"Filter expressions","title":"Filter objects matching specified keys/tags — tags_filter","text":"filter expression specifies tag tags found data type object (node, way relation) matched. object type(s) comes first, slash (/) rest expression. Object types specified 'n' (nodes), 'w' (ways), 'r' (relations) '' (areas - closed ways 4 nodes relations type=multipolygon type=boundary tag). combination can used. object type specified, expression matches object types. examples: n/amenity - matches nodes key \"amenity\". nw/highway - matches nodes ways key \"highway\". /note - matches objects type key \"note\". note - matches objects type key \"note\". w/highway=primary - matches ways key \"highway\" value \"primary\". w/highway!=primary - matches ways key \"highway\" value \"primary\". r/type=multipolygon,boundary - matches relations key \"type\" value \"multipolygon\" \"boundary\". w/name,name:de=Kastanienallee,Kastanienstrasse - matches way \"name\" \"name:de\" tag value \"Kastanienallee\" \"Kastanienstrasse\". n/addr:* - matches nodes key starting \"addr:\" n/name=*Paris - matches nodes name contains word \"Paris\". /building - matches closed ways 4 nodes relations tagged \"building\". Relations must also tag \"type=multipolygon\" \"type=boundary\". equal sign (\"=\") expression, keys matched values can anything. equal sign (\"=\") expression, key left value right. exclamation sign (\"!\") equal sign means: tag key, value(s) right equal sign. leading trailing asterisk (\"*\") can used substring prefix matching, respectively. Commas (\",\") can used separate several keys values. filter expressions case-sensitive. way escape special characters \"=\", \"\" \",\". can mix comma-expressions \"\"-expressions. specified filter expressions matched order given. achieve best performance, put expressions expected match often first. Area matches (leading \"/\") check whether matched object valid (multi)polygon, check whether object might possibly turned (multi)polygon. case closed ways (first last node ) 4 nodes relations additional \"type=multipolygon\" \"type=boundary\" tag.","code":""},{"path":"https://ipeagit.github.io/rosmium/reference/tags_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter objects matching specified keys/tags — tags_filter","text":"","code":"if (FALSE) { # identical(tolower(Sys.getenv(\"NOT_CRAN\")), \"true\") pbf_path <- system.file(\"extdata/cur.osm.pbf\", package = \"rosmium\")  # get all amenity nodes output <- tags_filter(pbf_path, \"n/amenity\", tempfile(fileext = \".osm.pbf\")) nodes <- sf::st_read(output, layer = \"points\", quiet = TRUE) head(nodes$other_tags)  # get all objects (nodes, ways or relations) with an addr:* tag output <- tags_filter(   pbf_path,   \"addr:*\",   tempfile(fileext = \".osm.pbf\"),   omit_referenced = TRUE ) nodes <- sf::st_read(output, layer = \"points\", quiet = TRUE) head(nodes$other_tags)  # get all nodes and ways with a highway tag and all relations tagged with # type=restriction plus all referenced objects output <- tags_filter(   pbf_path,   \"nw/highway r/type=restriction\",   tempfile(fileext = \".osm.pbf\") ) ways <- sf::st_read(output, layer = \"lines\", quiet = TRUE) head(ways$highway) relations <- sf::st_read(output, layer = \"other_relations\", quiet = TRUE) head(relations$other_tags) }"},{"path":"https://ipeagit.github.io/rosmium/news/index.html","id":"rosmium-010","dir":"Changelog","previous_headings":"","what":"rosmium 0.1.0","title":"rosmium 0.1.0","text":"CRAN release: 2023-11-27 Initial CRAN release.","code":""}]
